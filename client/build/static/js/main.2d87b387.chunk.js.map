{"version":3,"sources":["components/Header/logo.svg","components/Header/Header.js","components/Main/UserCard/UserCard.js","components/Main/Main.js","utils/autoSign.js","components/Auth/Auth.js","components/AddButton/AddButton.js","components/Participant/Participant.js","components/NewTraining/NewTraining.js","App.js","reportWebVitals.js","index.js"],"names":["Header","currentUser","className","data-uk-navbar","to","id","src","logo","alt","style","height","name","React","memo","UserCard","user","trainings","totalReps","bestRepHash","key","training","index","sets","length","reps","sort","prev","next","bestSet","Object","keys","a","b","bestRep","useUserTrainings","data-uk-grid","width","userName","moment","created","format","userId","Main","useState","users","setUsers","useEffect","axios","get","then","res","data","map","autoSign","callback","localStorage","getItem","post","response","Auth","setCurrentUser","history","useHistory","setName","passwordError","setPasswordError","nameError","setNameError","password","setPassword","type","placeholder","autoComplete","value","onChange","event","target","onClick","setItem","replace","catch","AddButton","Participant","useParams","items","setItems","console","log","item","paddingLeft","paddingRight","date","set","lineHeight","totalSets","NewTraining","setSets","today","formatedDate","createDate","handleInputChange","setKey","updateSets","error","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d87b387.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.24f50a3a.svg\";","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport logo from './logo.svg'\n\nconst Header = ({\n  currentUser,\n}) => (\n  <nav\n    className=\"uk-navbar-container\"\n    data-uk-navbar\n  >\n    <div className=\"uk-container uk-container-expand uk-width\">\n      <div className=\"uk-navbar\">\n        <div className=\"uk-navbar-left\">\n          <ul className=\"uk-navbar-nav\">\n            <li className=\"uk-active\" />\n            <li className=\"uk-active\">\n              <Link\n                to={`/users/${currentUser?.id}`}\n                className=\"\"\n              >\n                Мой дневник\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <div className=\"uk-navbar-center\">\n          <Link\n            to=\"/\"\n            className=\"uk-logo\"\n          >\n            <img\n              src={logo}\n              alt=\"logo\"\n              style={{ height: '80px' }}\n            />\n          </Link>\n        </div>\n        <div className=\"uk-navbar-right uk-margin-remove-right\">\n          {currentUser ? currentUser.name : (\n            <Link\n              to=\"/auth\"\n              className=\"uk-button uk-button-primary\"\n            >\n              <span className=\"uk-margin-small-left\">\n                Войти\n              </span>\n            </Link>\n          )}\n        </div>\n      </div>\n    </div>\n  </nav>\n)\n\nexport default React.memo(Header)\n","import React from 'react'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\n\nconst imgSrc = 'https://image.freepik.com/free-vector/fitness-gym-logo-premium-vector_144543-140.jpg'\n\nconst useUserTrainings = ({ trainings }) => {\n  let totalReps = 0\n  let bestRepHash = {}\n  // eslint-disable-next-line guard-for-in,no-restricted-syntax\n  for (const key in trainings) {\n    const training = trainings[key]\n\n    // eslint-disable-next-line no-plusplus\n    for (let index = 0; index <= training.sets.length; index++) {\n      const reps = training.sets[index]\n      bestRepHash = {\n        ...bestRepHash,\n        [reps]: reps,\n      }\n    }\n    totalReps += training.totalReps\n  }\n  const [bestSet] = trainings.sort((prev, next) => next.totalReps - prev.totalReps)\n  const [bestRep] = Object.keys(bestRepHash).sort((a, b) => b - a)\n\n  return {\n    totalReps,\n    bestRep,\n    bestSet: bestSet?.totalReps,\n  }\n}\n\nconst UserCard = ({\n  user,\n}) => {\n  const {\n    totalReps,\n    bestRep,\n    bestSet,\n  } = useUserTrainings(user)\n  return (\n    <div>\n      <div\n        className=\"uk-card uk-card-default uk-card-small\"\n        key={user.userId}\n      >\n        <div className=\"uk-card-header\">\n          <div\n            className=\"uk-grid-small uk-flex uk-flex-middle\"\n            data-uk-grid\n          >\n            <div className=\"uk-width-auto\">\n              <img\n                alt=\"logo\"\n                className=\"uk-border-circle\"\n                width=\"40\"\n                height=\"40\"\n                src={imgSrc}\n              />\n            </div>\n            <div className=\"uk-width-expand\">\n              <h3 className=\"uk-card-title uk-margin-remove-bottom\">\n                {user.userName}\n              </h3>\n              <p className=\"uk-text-meta uk-margin-remove-top\">\n                Отжимается с\n                {' '}\n                {moment(user.created).format('DD.MM.YYYY')}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"uk-card-body\">\n          <div>\n            Всего отжиманий:\n            {' '}\n            <span className=\"uk-text-bold\">{totalReps}</span>\n          </div>\n          <div>\n            Лучший подход:\n            {' '}\n            <span className=\"uk-text-bold\">{bestRep}</span>\n          </div>\n          <div>\n            Лучшая тренировка:\n            {' '}\n            <span className=\"uk-text-bold\">{bestSet}</span>\n          </div>\n        </div>\n        <div className=\"uk-card-footer\">\n          <Link\n            to={`/users/${user.userId}`}\n            className=\"uk-button uk-button-text\"\n          >\n            Узнать детали\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(UserCard)\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport UserCard from './UserCard/UserCard'\n\nfunction Main({\n  currentUser,\n}) {\n  const [users, setUsers] = useState([])\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/users')\n      .then((res) => {\n        setUsers(res.data)\n      })\n  }, [setUsers])\n\n  return (\n    <div className=\"uk-container uk-margin-small-top\">\n      <div\n        data-uk-grid\n        className=\"uk-grid-small uk-child-width-1-3@l uk-child-width-1-4@xl uk-child-width-1-2@s\"\n      >\n        {users.map(user => (\n          <UserCard\n            currentUser={currentUser}\n            user={user}\n            key={user.id}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Main\n","import axios from 'axios'\n\nexport const autoSign = (callback) => {\n  const userId = localStorage.getItem('userId')\n  if (userId) {\n    axios.post('http://localhost:5000/api/auth/auto', {\n      id: userId,\n    }).then((response) => {\n      callback(response.data)\n    })\n  }\n}\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { useHistory } from 'react-router'\n\nimport { autoSign } from '../../utils/autoSign'\n\nconst Auth = ({\n  setCurrentUser,\n}) => {\n  const history = useHistory()\n  const [name, setName] = useState('')\n  const [passwordError, setPasswordError] = useState(null)\n  const [nameError, setNameError] = useState(null)\n  const [password, setPassword] = useState('')\n  const handleNameChange = (event) => {\n    setNameError(null)\n    setName(event.target.value)\n  }\n  const handlePasswordChange = (event) => {\n    setPasswordError(null)\n    setPassword(event.target.value)\n  }\n  // eslint-disable-next-line consistent-return\n  const handleClick = () => {\n    if (!name || !password) {\n      if (!name) {\n        setNameError('Имя не может быть пустым')\n      } else {\n        setNameError(null)\n      }\n      if (!password) {\n        setPasswordError('Пароль не может быть пустым')\n      } else {\n        setPasswordError(null)\n      }\n      return null\n    }\n    axios.post('http://localhost:5000/api/auth', {\n      name,\n      password,\n    })\n      .then((response) => {\n        localStorage.setItem('userId', response.data.id)\n        autoSign(setCurrentUser)\n        history.replace('/')\n      })\n      .catch(() => {\n        setPasswordError('Неверный пароль')\n      })\n  }\n\n  return (\n    <div>\n      <div className=\" uk-card uk-card-default\">\n        <div className=\"uk-card-header uk-text-center\">Хочу отжиматься и не хочу писать на бумажке</div>\n        <div className=\"uk-card-body\">\n          <input\n            className={`uk-input ${nameError ? 'uk-form-danger' : ''}`}\n            type=\"text\"\n            placeholder=\"Меня зовут\"\n            autoComplete=\"off\"\n            value={name || ''}\n            onChange={handleNameChange}\n          />\n          <input\n            className={`uk-input uk-margin-small-top ${passwordError ? 'uk-form-danger' : ''}`}\n            type=\"password\"\n            placeholder=\"Пароль\"\n            autoComplete=\"new-password\"\n            value={password || ''}\n            onChange={handlePasswordChange}\n          />\n          {passwordError && <div className=\"uk-text-center uk-text-danger\">{passwordError}</div>}\n          {nameError && <div className=\"uk-text-center uk-text-danger\">{nameError}</div>}\n        </div>\n        <div\n          className=\"uk-card-footer uk-flex uk-flex-center\"\n        >\n          <button\n            onClick={handleClick}\n            className=\"uk-button uk-button-secondary\"\n            type=\"button\"\n          >\n            <span className=\"uk-margin-small-left\">Погнали!</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(Auth)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst AddButton = () => (\n  <div className=\"uk-flex uk-flex-center\">\n    <Link\n      className=\"uk-button uk-button-primary\"\n      type=\"button\"\n      to=\"/new\"\n    >\n      <span className=\"uk-margin-small-left\">Добавить тренировку</span>\n    </Link>\n  </div>\n)\n\nexport default React.memo(AddButton)\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { useParams } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport AddButton from '../AddButton/AddButton'\n\nfunction Participant({\n  currentUser,\n}) {\n  const { userId } = useParams()\n  const [items, setItems] = useState([])\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/trainings/${userId}`)\n      .then((res) => {\n        setItems(res.data)\n      })\n  }, [setItems])\n  console.log('currentUser:', currentUser)\n\n  return (\n    <div>\n      <div className=\"uk-container uk-margin-small-top\">\n        <div className=\"uk-flex uk-flex-between\">\n          <Link\n            className=\"uk-button uk-button-default\"\n            type=\"button\"\n            to=\"/\"\n          >\n            Назад\n          </Link>\n          {userId === currentUser?.id && (\n          <div className=\"uk-visible@s\">\n            <AddButton />\n          </div>\n          )}\n        </div>\n        <div className=\"uk-margin-medium-top\">\n          {items.length > 0 ? (\n            <div\n              className=\"uk-card uk-card-small uk-card-body uk-margin-small-top uk-padding-remove-vertical uk-visible@s\"\n            >\n              <div className=\"uk-flex uk-flex-between uk-flex-middle\">\n                <div className=\"uk-flex uk-flex-inline uk-flex-middle\">\n                  <div style={{ width: '50px' }}>\n                    Дата\n                  </div>\n                  <div className=\"uk-flex uk-flex-inline uk-margin-medium-left\">\n                    <div className=\"uk-padding-small uk-padding-remove-vertical\">\n                      Подходы и повторения\n                    </div>\n\n                  </div>\n                </div>\n                <div className=\"uk-padding-small uk-padding-remove-vertical\">\n                  Итого\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"uk-text-center\">\n              Тут будут отображаться твои тренировки\n            </div>\n          )}\n\n          {items.map((item, key) => (\n            <div\n              key={key} // eslint-disable-line react/no-array-index-key\n              className=\"uk-card uk-card-default uk-card-small\n              uk-card-hover uk-card-body uk-margin-small-top uk-padding-remove-vertical\"\n            >\n              <div style={{\n                paddingLeft: '90px',\n                paddingRight: '90px',\n              }}\n              >\n                <div className=\"uk-position-absolute uk-position-left uk-padding-small\">\n                  {moment(item.date).format('DD.MM.YYYY')}\n                </div>\n                <div\n                  className=\"uk-flex uk-flex-inline\"\n                  style={{\n                    width: '100%',\n                    'overflow-x': 'auto',\n                  }}\n                >\n                  {item.sets.map(set => (\n                    <div\n                      className=\"uk-padding-small\"\n                      key={set}\n                    >\n                      {set}\n                    </div>\n                  ))}\n                </div>\n                <div\n                  style={{\n                    width: '80px',\n                    paddingRight: '15px',\n                  }}\n                  className=\"uk-position-absolute uk-position-right uk-text-right\"\n                >\n                  <span\n                    className=\"uk-text-bold uk-text-lead\"\n                    style={{\n                      lineHeight: '54px',\n                    }}\n                  >\n                    {item.totalReps}\n                  </span>\n                  {` / ${item.totalSets}`}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      {userId === currentUser?.id && (\n      <div className=\"uk-hidden@s uk-position-fixed uk-position-bottom-center uk-padding\">\n        <AddButton />\n      </div>\n      )}\n    </div>\n  )\n}\n\nexport default React.memo(Participant)\n","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst createDate = () => {\n  const today = moment()\n  return {\n    date: today,\n    formatedDate: today.format('DD.MM.YYYY'),\n  }\n}\n\nconst NewTraining = ({\n  currentUser,\n}) => {\n  const [sets, setSets] = useState([0, 0, 0])\n  const { date, formatedDate } = createDate()\n  const history = useHistory()\n\n  const handleAddSet = () => {\n    setSets([\n      ...sets,\n      0,\n    ])\n  }\n\n  const updateSets = (key, value) => {\n    setSets(\n      sets.map((set, setKey) => {\n        if (setKey !== key) return set\n        return value\n      }),\n    )\n  }\n\n  const handleInputChange = (key, event) => {\n    updateSets(key, event.target.value)\n  }\n\n  const handleCreateTraining = () => {\n    axios.post('http://localhost:5000/api/trainings/create', {\n      date,\n      sets,\n      userId: currentUser.id,\n    })\n      .then((response) => {\n        console.log('response:', response)\n        history.replace('/')\n      })\n      .catch((error) => {\n        console.log('err:', error)\n      })\n  }\n  return (\n    <>\n      <div>\n        <Link\n          className=\"uk-button uk-button-default\"\n          type=\"button\"\n          to=\"/\"\n        >\n          Назад\n        </Link>\n      </div>\n      <div className=\"uk-card uk-card-default uk-card-small uk-margin-medium-top\">\n        <div className=\"uk-flex uk-flex-center uk-card-header uk-text-bold uk-text-lead\">\n          {formatedDate}\n        </div>\n        <div className=\"uk-card-body\">\n          <div className=\"\">\n            {sets.map((set, key) => (\n              <div className=\"uk-margin-small-top\">\n                <div className=\" uk-flex uk-flex-inline uk-width\">\n                  <span className=\"uk-text-lead uk-padding uk-padding-remove-vertical\">\n                    {key + 1}\n                  </span>\n                  <input\n                    className=\"uk-input uk-width\"\n                    type=\"tel\"\n                    placeholder=\"Кол-во повторений\"\n                    value={set || ''}\n                    onChange={event => handleInputChange(key, event)}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"uk-flex uk-flex-center uk-margin-small-top\">\n            <button\n              className=\"uk-button uk-button-default\"\n              type=\"button\"\n              onClick={handleAddSet}\n            >\n              <span className=\"uk-margin-small-left\">Добавить подход</span>\n            </button>\n          </div>\n        </div>\n        <div className=\"uk-card-footer uk-flex uk-flex-right\">\n          <button\n            className=\"uk-button uk-button-primary\"\n            type=\"button\"\n            onClick={handleCreateTraining}\n          >\n            Сохранить\n          </button>\n          <Link\n            className=\"uk-button uk-button-default uk-margin-small-left\"\n            type=\"button\"\n            to=\"/\"\n          >\n            Отмена\n          </Link>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(NewTraining)\n","import React, { useEffect, useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom'\n\nimport Header from './components/Header/Header'\nimport Main from './components/Main/Main'\nimport Auth from './components/Auth/Auth'\nimport Participant from './components/Participant/Participant'\nimport NewTraining from './components/NewTraining/NewTraining'\nimport { autoSign } from './utils/autoSign'\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState(null)\n\n  useEffect(() => {\n    autoSign(setCurrentUser)\n  },\n  [setCurrentUser])\n\n  return (\n    <Router>\n      <div>\n        <Header currentUser={currentUser} />\n        <div className=\"uk-container uk-margin-medium-top uk-margin-large-bottom\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n            >\n              <Main currentUser={currentUser} />\n            </Route>\n            <Route\n              exact\n              path=\"/users/:userId\"\n            >\n              <Participant currentUser={currentUser} />\n            </Route>\n            <Route path=\"/new\">\n              {currentUser ? <NewTraining currentUser={currentUser} /> : <Redirect to=\"/auth\" />}\n            </Route>\n            <Route\n              exact\n              path=\"/auth\"\n            >\n              {currentUser ? <Redirect to=\"/\" /> : <Auth setCurrentUser={setCurrentUser} />}\n            </Route>\n          </Switch>\n        </div>\n\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}